apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.compileSdk

    defaultConfig {
        applicationId "com.mreigar.postapp"
        minSdkVersion rootProject.minSdk
        targetSdkVersion rootProject.targetSdk
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner "com.mreigar.postapp.espresso.utils.PostAppTestRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    signingConfigs {
        release {
            // Load keystore
            Properties properties = new Properties()
            def keystorePropertiesFile = file("keystore.properties")
            if (keystorePropertiesFile.exists()) {
                properties.load(new FileInputStream(keystorePropertiesFile))
            } else {
                properties.setProperty('STORE_FILE', System.getenv('KEY_PATH'))
                properties.setProperty('STORE_PASS', System.getenv('KEY_STORE_PASSWORD'))
                properties.setProperty('KEY_ALIAS', System.getenv('ALIAS'))
                properties.setProperty('KEY_PASS', System.getenv('KEY_PASSWORD'))
            }

            storeFile file(properties['STORE_FILE'])
            storePassword properties['STORE_PASS']
            keyAlias properties['KEY_ALIAS']
            keyPassword properties['KEY_PASS']
        }
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation project(':presentation')
    implementation project(':network')
    implementation project(':local-storage')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation "org.koin:koin-android:$koin_version"
    testImplementation "org.koin:koin-test:$koin_version"

    implementation "com.google.android.material:material:$material_version"

    implementation "androidx.appcompat:appcompat:$androidx_compat_version"
    implementation "androidx.core:core-ktx:$androidx_core_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout_version"
    implementation "com.airbnb.android:lottie:$lottieVersion"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    testImplementation 'junit:junit:4.12'
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp_version"
    testImplementation "org.assertj:assertj-core:$assertj_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "androidx.test:core:$androidx_test_version"

    androidTestImplementation "androidx.test.ext:junit:$test_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"

    androidTestImplementation("com.schibsted.spain:barista:$barista_version") {
        exclude group: 'org.jetbrains.kotlin'
    }

}

android.sourceSets {
    test {
        java.srcDirs += "$projectDir/src/testShared"
    }

    androidTest {
        java.srcDirs += "$projectDir/src/testShared"
    }
}
